receivers:
  otlp:
    protocols:
      grpc:
      http:
  # https://opentelemetry.io/docs/kubernetes/collector/components/#kubeletstats-receiver
  kubeletstats:
    collection_interval: 60s
    auth_type: 'serviceAccount'
    endpoint: '${env:K8S_NODE_NAME}:10250'
    insecure_skip_verify: true
    extra_metadata_labels:
      - k8s.volume.type
    metric_groups:
      - node
      - pod
      - container
      - volume
  prometheus:
    config:
      scrape_configs:
        - job_name: otel-collector
          scrape_interval: 5s
          static_configs:
            - targets: ['0.0.0.0:8888']
        # - job_name: node-exporter
        #   scrape_interval: 5s
        #   static_configs:
        #     - targets: ['${env:NODE_EXPORTER__HOST}']
        # - job_name: prometheus-k8s
        #   scrape_interval: 5s
        #   static_configs:
        #     - targets: ['${env:PROMETHEUS_K8S__HOST}']
        - job_name: k8s-state-metrics
          scrape_interval: 60s
          static_configs:
            - targets: ['${env:K8S_STATE_METRICS_HOST}']
        - job_name: node-exporter
          scrape_interval: 60s
          static_configs:
            - targets: ['${env:NODE_EXPORTER__HOST}']

processors:
  batch:
  k8sattributes:
    auth_type: "serviceAccount"
  attributes/prom:
    actions:
      - key: k8s.node.name
        from_attribute: node
        action: upsert
      - key: node
        action: delete
      - key: k8s.namespace.name
        from_attribute: namespace
        action: upsert
      - key: namespace
        action: delete
      - key: k8s.pod.name
        from_attribute: pod
        action: upsert
      - key: pod
        action: delete
      - key: k8s.pod.uid
        from_attribute: uid
        action: upsert
      - key: uid
        action: delete
      - key: k8s.container.name
        from_attribute: container
        action: upsert
      - key: container
        action: delete

exporters:
  logging:
    loglevel: debug
  prometheusremotewrite:
    endpoint: ${env:PROMETHEUS__HOST}/api/v1/write
    tls:
      insecure: true
    resource_to_telemetry_conversion:
      enabled: true

extensions:
  health_check:
    endpoint: "0.0.0.0:13133"
    path: "/health/status"

service:
  extensions: [health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [k8sattributes, batch]
      exporters: [logging]
    metrics:
      receivers: [otlp, prometheus, kubeletstats]
      processors: [k8sattributes, attributes/prom, batch]
      exporters: [prometheusremotewrite]
    logs:
      receivers: [otlp]
      processors: [k8sattributes, batch]
      exporters: [logging]
