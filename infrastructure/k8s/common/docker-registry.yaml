apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: docker-registry
    app.kubernetes.io/name: docker-registry
  name: docker-registry
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  capacity:
    storage: 50Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /mnt/md0/docker-registry
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - pstroganov
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  serviceName: docker-registry
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - name: docker-registry
          image: registry:2
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5000
          volumeMounts:
            - mountPath: /var/lib/registry
              name: docker-registry-volume-claim
  volumeClaimTemplates:
    - metadata:
        name: docker-registry-volume-claim
        labels:
          app: docker-registry
      spec:
        storageClassName: local-storage
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  labels:
    app: docker-registry
  namespace: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
