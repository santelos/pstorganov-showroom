# apiVersion: v1
# kind: Secret
# metadata:
#   name: user-auth-service
#   namespace: account
#   labels:
#     app: user-auth-service
# type: Opaque
# data:
#   OAUTH2__MAIN__CLIENT_ID: ""
#   OAUTH2__MAIN__CLIENT_SECRET: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-auth-service
  namespace: account
  labels:
    app: user-auth-service
data:
  OAUTH2__ADMIN_URL: "http://hydra:4445"
  OAUTH2__PUBLIC_URL: "http://hydra:4444"
  USER_INFO_SERVICE__URL: "http://user-info-service"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-auth-service
  namespace: account
  labels:
    app: user-auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-auth-service
  template:
    metadata:
      labels:
        app: user-auth-service
      annotations:
        prometheus.io/scrape: "true"
        metrics_auth_type: "oauth2"
    spec:
      containers:
      - name: user-auth-service
        image: docker.santelos.com/user-auth-service-k
        ports:
        - containerPort: 80
        - containerPort: 5005
        envFrom:
          - configMapRef:
              name: user-auth-service
          - secretRef:
              name: user-auth-service
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: user-auth-service
  namespace: account
spec:
  selector:
    app: user-auth-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: user-auth-service
  namespace: account
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "id.santelos.com"
    secretName: id-santelos-cert
  rules:
  - host: id.santelos.com
    http:
      paths:
      - path: /user-auth(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: user-auth-service
            port:
              number: 80
