apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-conf
  labels:
    name: grafana-conf
  namespace: monitoring
data:
  grafana.ini: |-
    [server]
    root_url = https://grafana.santelos.com
    [auth.github]
    enabled = true
    allow_sign_up = true
    client_id =
    client_secret =
    scopes = user:email,read:org
    auth_url = https://github.com/login/oauth/authorize
    token_url = https://github.com/login/oauth/access_token
    api_url = https://api.github.com/user
    team_ids =
    allowed_organizations = PStroganovShowroom
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: monitoring
  name: grafana
spec:
  replicas: 1
  serviceName: grafana
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0    
      containers:
        - name: grafana
          image: grafana/grafana:9.3.1
          imagePullPolicy: "IfNotPresent" 
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: grafana-config-volume
              mountPath: "/etc/grafana/"
            - name: grafana-volume-claim
              mountPath: /var/lib/grafana           
              subPath: grafana-data
          envFrom:
            - secretRef:
                name: grafana
      volumes:
        - name: grafana-config-volume
          configMap:
            defaultMode: 420
            name: grafana-conf
  volumeClaimTemplates:
    - metadata:
        name: grafana-volume-claim
        labels:
          app: grafana
      spec:
        storageClassName: gp2
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
kind: Service
apiVersion: v1
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: grafana.santelos.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
