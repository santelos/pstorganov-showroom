apiVersion: v1
kind: ConfigMap
metadata:
  name: opentelemetry-collector
  namespace: monitoring
  labels:
    app: opentelemetry-collector
data:
  K8S_STATE_METRICS_HOST: "kube-state-metrics:8080"
  NODE_EXPORTER__HOST: "node-exporter:9100"
  PROMETHEUS__HOST: "http://prometheus:9090"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: opentelemetry-collector
  namespace: monitoring
  labels:
    app: opentelemetry-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry-collector
  template:
    metadata:
      labels:
        app: opentelemetry-collector
    spec:
      serviceAccountName: opentelemetry-collector
      containers:
      - name: opentelemetry-collector
        image: docker.santelos.com/opentelemetry-collector
        ports:
        - containerPort: 4317
        - containerPort: 55679
        env:
          - name: K8S_NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
        envFrom:
          - configMapRef:
              name: opentelemetry-collector
        livenessProbe:
          httpGet:
            path: "/health/status"
            port: 13133
          initialDelaySeconds: 5
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: "/health/status"
            port: 13133
          initialDelaySeconds: 5
          failureThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: opentelemetry-collector
  namespace: monitoring
spec:
  selector:
    app: opentelemetry-collector
  ports:
  - protocol: TCP
    name: "grpc-receiver"
    port: 4317
    targetPort: 4317
  - protocol: TCP
    name: "zpages-extension"
    port: 55679
    targetPort: 55679
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opentelemetry-collector
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opentelemetry-collector-k8sattributes
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opentelemetry-collector
subjects:
- kind: ServiceAccount
  name: opentelemetry-collector
  namespace: monitoring
roleRef:
  kind: ClusterRole
  name: opentelemetry-collector-k8sattributes
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opentelemetry-collector-kubeletstats
rules:
  - apiGroups: ['']
    resources: 
      - 'nodes/stats'
      - 'nodes/proxy'
    verbs: ['get', 'watch', 'list']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opentelemetry-collector-k8s-kubelet
subjects:
  - kind: ServiceAccount
    name: opentelemetry-collector
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: opentelemetry-collector-kubeletstats
  apiGroup: rbac.authorization.k8s.io
