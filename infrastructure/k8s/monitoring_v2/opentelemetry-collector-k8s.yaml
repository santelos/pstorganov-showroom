apiVersion: v1
kind: ServiceAccount
metadata:
  name: opentelemetry-collector-k8s
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opentelemetry-collector-k8s-kubelet
rules:
  - apiGroups: ['']
    resources: 
      - 'nodes/stats'
      - 'nodes/proxy'
    verbs: ['get', 'watch', 'list']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opentelemetry-collector-k8s-kubelet
roleRef:
  kind: ClusterRole
  name: opentelemetry-collector-k8s-kubelet
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: opentelemetry-collector-k8s
    namespace: monitoring
---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: opentelemetry-collector-k8s-cluster
# rules:
#   - apiGroups:
#       - ""
#     resources:
#       - events
#       - namespaces
#       - namespaces/status
#       - nodes
#       - nodes/spec
#       - pods
#       - pods/status
#       - replicationcontrollers
#       - replicationcontrollers/status
#       - resourcequotas
#       - services
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#       - apps
#     resources:
#       - daemonsets
#       - deployments
#       - replicasets
#       - statefulsets
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#       - extensions
#     resources:
#       - daemonsets
#       - deployments
#       - replicasets
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#       - batch
#     resources:
#       - jobs
#       - cronjobs
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#       - autoscaling
#     resources:
#       - horizontalpodautoscalers
#     verbs:
#       - get
#       - list
#       - watch
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: opentelemetry-collector-k8s-cluster
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: opentelemetry-collector-k8s-cluster
# subjects:
#   - kind: ServiceAccount
#     name: opentelemetry-collector-k8s
#     namespace: monitoring
# ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opentelemetry-collector-k8s
  namespace: monitoring
  labels:
    app: opentelemetry-collector-k8s
data:
  OPENTELEMETRY_COLLECTOR__HOST: "opentelemetry-collector:4317"
  K8S_STATE_METRICS_HOST: "kube-state-metrics:8080"
  NODE_EXPORTER__HOST: "node-exporter:9100"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentelemetry-collector-k8s
  namespace: monitoring
  labels:
    app: opentelemetry-collector-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opentelemetry-collector-k8s
  template:
    metadata:
      labels:
        app: opentelemetry-collector-k8s
    spec:
      serviceAccountName: opentelemetry-collector-k8s
      containers:
        - name: opentelemetry-collector-k8s
          image: docker.santelos.com/opentelemetry-collector-k8s
          imagePullPolicy: Always
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          envFrom:
          - configMapRef:
              name: opentelemetry-collector-k8s
